export const exampleBlogPost = {
  compiledSource:
    'var m=Object.defineProperty,g=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var d=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var s=(e,n,o)=>n in e?m(e,n,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[n]=o,a=(e,n)=>{for(var o in n||(n={}))d.call(n,o)&&s(e,o,n[o]);if(i)for(var o of i(n))r.call(n,o)&&s(e,o,n[o]);return e},p=(e,n)=>g(e,u(n));var l=(e,n)=>{var o={};for(var t in e)d.call(e,t)&&n.indexOf(t)<0&&(o[t]=e[t]);if(e!=null&&i)for(var t of i(e))n.indexOf(t)<0&&r.call(e,t)&&(o[t]=e[t]);return o};const layoutProps={},MDXLayout="wrapper";function MDXContent(o){var t=o,{components:e}=t,n=l(t,["components"]);return mdx(MDXLayout,p(a(a({},layoutProps),n),{components:e,mdxType:"MDXLayout"}),mdx("p",null,"It\'s the first thing that greets you when you look at an npm package, be it on npm itself or in the source on GitHub: The README.md file. But if you are like me, then writing documentation never was your strong suite - let alone maintaining and updating it."),mdx("p",null,"What if, instead of having to update the README file manually whenever your code changes, the README could just stay up-to-date auto-magically? What if instead of having to remember which badges you need to add, this would all be done for you?"),mdx("h2",null,"Introducing jsx-readme"),mdx("p",null,"Here\'s an example of using ",mdx("inlineCode",{parentName:"p"},"jsx-readme"),":"),mdx("pre",null,mdx("code",a({parentName:"pre"},{}),`// We need to tell the JSX transpiler that in this file,\n// instead of React we use the custom createElement and Fragment\n// functions from jsx-readme\n/* @jsx MD */\n/* @jsxFrag Fragment */\nimport type { Component } from "jsx-readme";\nimport MD, {\n BadgesFromPkg,\n CodecovBadge,\n DescriptionFromPkg,\n ExamplesFromPkg,\n Fragment,\n GithubWorkflowBadge,\n HomepageFromPkg,\n renderToFile,\n TitleFromPkg,\n} from "jsx-readme";\nimport { Heading, InlineCode, LineBreak } from "jsx-md";\nimport pkg from "./package.json";\n\nconst Readme: Component = () => (\n <Fragment>\n {/* Create a header with title, badges and description inferred from package.json */}\n <TitleFromPkg pkg={pkg} />\n <BadgesFromPkg pkg={pkg} />\n {/* Add additional badges. */}\n <CodecovBadge pkg={pkg} />\n <GithubWorkflowBadge pkg={pkg} workflowName="Build and deploy" />\n <LineBreak />\n <DescriptionFromPkg pkg={pkg} />\n {/* You can use the components from jsx-md to build custom markdown. */}\n <Heading level={2}>Installation</Heading>\n Add <InlineCode>jsx-readme</InlineCode> to your{" "}\n <InlineCode>devDependencies</InlineCode> and install it. I recommend using\n it with <InlineCode>ts-node</InlineCode>. Then all you need to do is add a\n file like in the example below and run it via{" "}\n <InlineCode>ts-node</InlineCode> whenever you want to create a new version\n of the <InlineCode>README</InlineCode>.\n <LineBreak />\n <LineBreak />\n {/* Create an example section based on all files from the example directory set up in package.json */}\n <ExamplesFromPkg pkg={pkg} />\n {/* Create a section linking to the homepage from package.json */}\n <HomepageFromPkg pkg={pkg} />\n </Fragment>\n);\n\nvoid renderToFile("./README.md", <Readme />);\n`)),mdx("p",null,"As you can see, ",mdx("inlineCode",{parentName:"p"},"jsx-readme")," uses a React-like JSX syntax to define Markdown. It is built on top of ",mdx("inlineCode",{parentName:"p"},"jsx-md")," which you can also use independently, or together with ",mdx("inlineCode",{parentName:"p"},"jsx-readme"),", depending on your needs."),mdx("p",null,"Since JSX is basically JavaScript, we can do in this file whatever we want. In this simple case we just import the local ",mdx("inlineCode",{parentName:"p"},"package.json")," file to read from it, but why not e. g. query the GitHub API to figure out who contributed and then adding them to your Readme?"),mdx("p",null,"And since it is just a TypeScript file, you can simply run it via e. g. ",mdx("inlineCode",{parentName:"p"},"ts-node")," instead of having to learn yet another CLI tool."),mdx("h2",null,"So what does it look like?"),mdx("p",null,"The best way to understand the result of the script above is to just look at ",mdx("a",a({parentName:"p"},{href:"https://github.com/dbartholomae/jsx-readme/"}),"the package itself")," - ",mdx("inlineCode",{parentName:"p"},"jsx-readme")," uses it to create its own README."))}MDXContent.isMDXComponent=!0;\n',
  scope: {},
};
